{
	"extends": [
		"airbnb-base",
		"airbnb-typescript/base",
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:sonarjs/recommended",
		"plugin:unicorn/recommended",
		"plugin:import/errors",
		"plugin:import/warnings",
		"plugin:import/typescript",
		"prettier"
	],
	"plugins": [
		"@typescript-eslint",
		"import",
		"sonarjs",
		"unicorn",
		"prettier"
	],
	"rules": {
		"@typescript-eslint/no-non-null-assertion": "off",
		"@typescript-eslint/explicit-member-accessibility": "error",
		"@typescript-eslint/array-type": "error",
		"@typescript-eslint/consistent-indexed-object-style": "error",
		"@typescript-eslint/consistent-type-definitions": ["error", "interface"],
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{
				"disallowTypeAnnotations": false
			}
		],
		"@typescript-eslint/method-signature-style": "error",
		"@typescript-eslint/member-ordering": "error",
		"@typescript-eslint/no-confusing-non-null-assertion": "error",
		"@typescript-eslint/no-confusing-void-expression": ["error", { "ignoreArrowShorthand": true }],
		"@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
		"@typescript-eslint/no-redundant-type-constituents": "error",
		"@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
		"@typescript-eslint/no-unnecessary-qualifier": "error",
		"@typescript-eslint/no-unnecessary-type-arguments": "error",
		"@typescript-eslint/no-useless-empty-export": "error",
		"@typescript-eslint/non-nullable-type-assertion-style": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-nullish-coalescing": "error",
		"@typescript-eslint/prefer-optional-chain": "error",
		"@typescript-eslint/prefer-readonly": "error",
		"@typescript-eslint/prefer-reduce-type-parameter": "error",
		"@typescript-eslint/sort-type-constituents": "error",
		"@typescript-eslint/type-annotation-spacing": "error",
		"@typescript-eslint/no-unnecessary-condition": "error",
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "variable",
				"format": ["camelCase", "UPPER_CASE", "PascalCase"]
			},
			{
				"selector": "typeLike",
				"format": ["PascalCase"]
			},
			{
				"selector": "class",
				"format": ["PascalCase"]
			},
			{
				"selector": "interface",
				"format": ["PascalCase"]
			}
		],
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/no-implied-eval": "off",

		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": "error",
		"no-shadow": "off",
		"@typescript-eslint/no-shadow": "error",
		"brace-style": "off",
		"@typescript-eslint/brace-style": ["error", "1tbs"],
		"no-return-await": "off",
		"@typescript-eslint/return-await": ["error", "never"],
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": ["error", { "functions": false }],

		"consistent-return": "off",
		"class-methods-use-this": "off",
		"eol-last": ["error", "always"],
		"object-shorthand": [
			"error",
			"always",
			{
				"avoidQuotes": true
			}
		],
		"no-plusplus": "off",
		"no-underscore-dangle": "off",
		"no-restricted-syntax": "off",
		"no-spaced-func": "off",
		"no-irregular-whitespace": "error",
		"no-multiple-empty-lines": [
			"error",
			{
				"max": 1
			}
		],
		"one-var": ["error", "never"],
		"no-cond-assign": ["error", "except-parens"],
		"comma-dangle": 0,
		"eqeqeq": [
			"error",
			"always",
			{
				"null": "ignore"
			}
		],
		"new-parens": ["error", "always"],
		"no-caller": "error",
		"no-constant-condition": "error",
		"no-control-regex": "error",
		"no-debugger": "error",
		"no-duplicate-case": "error",
		"no-eval": "error",
		"no-ex-assign": "error",
		"no-extra-boolean-cast": "error",
		"no-fallthrough": "error",
		"no-inner-declarations": "error",
		"no-unused-labels": "error",
		"no-proto": "error",
		"no-redeclare": "error",
		"no-regex-spaces": "error",
		"no-self-compare": "error",
		"no-sparse-arrays": "error",
		"no-negated-in-lhs": "error",
		"no-new-wrappers": "error",
		"no-self-assign": "error",
		"no-this-before-super": "error",
		"no-with": "error",
		"rest-spread-spacing": ["error", "never"],
		"no-trailing-spaces": [
			"error",
			{
				"ignoreComments": true
			}
		],
		"no-undef-init": "error",
		"no-unsafe-finally": "error",
		"padded-blocks": ["error", "never"],
		"space-in-parens": ["error", "never"],
		"use-isnan": "error",
		"valid-typeof": [
			"error",
			{
				"requireStringLiterals": true
			}
		],
		"curly": ["error", "all"],
		"handle-callback-err": ["error", "^error$"],
		"no-array-constructor": "error",
		"no-unreachable": "error",
		"no-multi-spaces": "error",
		"no-unneeded-ternary": "error",
		"no-param-reassign": ["error", { "props": false }],
		"no-continue": "off",

		"sonarjs/no-duplicate-string": "off",
		"sonarjs/no-identical-functions": "off",
		"sonarjs/no-inverted-boolean-check": "error",

		"sort-imports": "off",
		"import/order": [
			"error",
			{
				"groups": ["builtin", "external", "internal", "parent", "sibling", "index", "object"]
			}
		],
		"import/no-unresolved": "off",
		"import/prefer-default-export": "off",
		"import/no-extraneous-dependencies": 0,
		"import/extensions": [
			"error",
			"ignorePackages",
			{
				"js": "never",
				"ts": "never"
			}
		],

		"unicorn/prefer-module": "off",
		"unicorn/prefer-node-protocol": "off",
		"unicorn/prefer-number-properties": "off",
		"unicorn/filename-case": "off",
		"unicorn/import-style": "off",
		"unicorn/new-for-builtins": "off",
		"unicorn/prevent-abbreviations": ["warn"],
		"unicorn/no-array-callback-reference": "off",
		"unicorn/no-array-method-this-argument": "off",
		"unicorn/no-useless-undefined": ["error", { "checkArguments": false }],
		"unicorn/consistent-function-scoping": ["error", { "checkArrowFunctions": false }],
		"unicorn/no-unused-properties": "error",
		"unicorn/no-unsafe-regex": "error",
		"unicorn/prefer-at": "error",

		"prettier/prettier": "error"
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "./tsconfig.json"
	},
	"settings": {
		"import/resolver": {
			"node": {
				"extensions": [".ts"]
			}
		}
	},
	"env": {
		"browser": true,
		"es2022": true
	}
}
